{"google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Automate opening up terminal tabs (or split panes) with a set of routine commands on OSX.","body":"Termup\r\n======\r\n\r\nAutomate opening up terminal tabs (or split panes) with a set of routine commands.\r\n\r\nIt's the easiest way to get started for your projects every day.\r\n\r\nCompatible with Terminal.app and iTerm 2 on Mac OS X 10.6 - 10.8 and Ruby 1.8.7 - 1.9.3.\r\n\r\n![Split Panes](https://github.com/kenn/termup/raw/master/images/split_panes.png)\r\n\r\n**iTerm 1 users:** Termup 2.0 and up is not compatible with iTerm 1. Install 1.3.1 by `gem install termup -v=1.3.1`\r\n\r\nInstallation\r\n------------\r\n\r\n```sh\r\n$ gem install termup\r\n```\r\n\r\nNote that you need to prepend `sudo` if you're using the OSX pre-installed Ruby.\r\n\r\nUsage\r\n-----\r\n\r\n### Getting Started ###\r\n\r\nCall the following command:\r\n\r\n```sh\r\n$ termup create myproject\r\n```\r\n\r\nThis will create a new project at `~/.config/termup/myproject.yml`. Edit the file:\r\n\r\n```sh\r\n$ termup edit myproject\r\n```\r\n\r\nAnd now you're good to go:\r\n\r\n```sh\r\n$ termup start myproject\r\n```\r\n\r\n### YAML Syntax ###\r\n\r\n```yaml\r\n# ~/.config/termup/myproject.yml\r\n---\r\ntabs:\r\n  tab1:\r\n    - cd ~/projects/foo\r\n    - git status\r\n    - subl .\r\n  tab2:\r\n    - mysql -u root\r\n    - show databases;\r\n  tab3:\r\n    - cd ~/projects/foo\r\n    - tail -f log/development.log\r\n  tab4:\r\n    - cd ~/projects/foo\r\n    - autotest\r\noptions:\r\n  iterm:\r\n    width: 2\r\n    height: 2\r\n```\r\n\r\nTabs can contain a single command, or YAML arrays to execute multiple commands.\r\n\r\n### Shortcut ###\r\n\r\nCommands have a shortcut for even fewer keystrokes.\r\n\r\n```sh\r\n$ termup s myproject\r\n```\r\n\r\nThat's equivalent to `termup start myproject`.\r\n\r\niTerm 2 Split Pane Support\r\n--------------------------\r\n\r\nThere are two options to deal with split panes on iTerm 2: `--iterm_basic` and `--iterm_advanced`\r\n\r\n### --iterm_basic\r\n\r\n```sh\r\ntermup create myproject --iterm_basic\r\n```\r\n\r\nThis will generate additional options in the config file:\r\n\r\n```yaml\r\noptions:\r\n  iterm:\r\n    width: 2\r\n    height: 2\r\n```\r\n\r\nThe setting above will generate four panes in the following layout.\r\n\r\n    #################\r\n    #       #       #\r\n    #   1   #   3   #\r\n    #       #       #\r\n    #################\r\n    #       #       #\r\n    #   2   #   4   #\r\n    #       #       #\r\n    #################\r\n\r\n### --iterm_advanced\r\n\r\n```sh\r\ntermup create myproject --iterm_advanced\r\n```\r\n\r\nThis will generate a config file in an advanced format:\r\n\r\n```yaml\r\n# COMMENT OF SCRIPT HERE\r\n---\r\ntabs:\r\n  pane1:\r\n    commands:\r\n      - echo pane1\r\n    layout:\r\n      - split_vertically\r\n  pane2:\r\n    commands:\r\n      - echo pane2\r\n    layout:\r\n      - split_horizontally\r\n  pane3:\r\n    commands:\r\n      - echo pane3\r\n    layout:\r\n      - split_horizontally\r\n  pane4:\r\n    commands:\r\n      - echo pane4\r\n```\r\n\r\nThe setting above will generate four panes in the following layout.\r\n\r\n    #################\r\n    #       #       #\r\n    #       #   2   #\r\n    #       #       #\r\n    #       #########\r\n    #       #       #\r\n    #   1   #   3   #\r\n    #       #       #\r\n    #       #########\r\n    #       #       #\r\n    #       #   4   #\r\n    #       #       #\r\n    #################\r\n\r\nAvailable layout commands:\r\n\r\n```ruby\r\nnew_tab\r\nclose_tab\r\ngoto_previous_tab\r\ngoto_next_tab\r\ngoto_previous_pane\r\ngoto_next_pane\r\nsplit_vertically\r\nsplit_horizontally\r\ngo_left\r\ngo_right\r\ngo_down\r\ngo_up\r\n```\r\n","name":"Termup"}